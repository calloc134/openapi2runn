openapi: 3.0.0
paths:
  /api/auth/login:
    post:
      operationId: AuthController_login
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginAuthRequestDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginAuthResponseDto'
  /api/auth/logout:
    post:
      operationId: AuthController_logout
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginAuthResponseDto'
        '401':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/templateException'
      security:
        - SESSIONID: []
  /api/auth/signup:
    post:
      operationId: UserController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequestDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponseDto'
  /api/profile/all:
    get:
      operationId: UserController_findAll
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserResponseDto'
  /api/profile/@{screenName}:
    get:
      operationId: UserController_findOne
      parameters:
        - name: screenName
          required: true
          in: path
          schema:
            type: string
          example: "PIYOPIYO"
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponseDto'
  /api/profile/me:
    get:
      operationId: AuthuserController_profile
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAuthResponseDto'
    put:
      operationId: AuthuserController_update
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequestDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAuthResponseDto'
    delete:
      operationId: AuthuserController_delete
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteUserRequestDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAuthResponseDto'
  /api/profile/me/password:
    put:
      operationId: AuthuserController_password
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordUserAuthRequestDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAuthResponseDto'
  /api/admin/profile/all:
    get:
      operationId: AdminController_findAll
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserAuthResponseDto'
  /api/admin/profile/@{screenName}:
    get:
      operationId: AdminController_findOne
      parameters:
        - name: screenName
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAuthResponseDto'
    put:
      operationId: AdminController_update
      parameters:
        - name: screenName
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserAdminRequestDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAuthResponseDto'
    delete:
      operationId: AdminController_delete
      parameters:
        - name: screenName
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAuthResponseDto'
  /api/post/all:
    get:
      operationId: PostController_findAll
      parameters: []
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PostResponseDto'
  /api/post/{id}:
    get:
      operationId: PostController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostResponseDto'
    patch:
      operationId: AuthpostController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAuthPostDto'

      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostResponseDto'
    delete:
      operationId: AuthpostController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostResponseDto'
  /api/post/new:
    post:
      operationId: AuthpostController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAuthPostDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostResponseDto'
  /api/admin/post/{id}:
    delete:
      operationId: AuthAdminPostController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PostResponseDto'
  /api/like/post/{id}:
    get:
      operationId: LikePostController_findAll
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/LikeToPostResponseDto'
    post:
      operationId: LikePostController_create
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LikeToPostResponseDto'
    delete:
      operationId: LikePostController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LikeToPostResponseDto'
  /api/comment/post/{id}:
    get:
      operationId: CommentToPostController_findAll
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CommentToPostResponseDto'
    post:
      operationId: AuthCommentToPostController_create
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAuthCommentToPostDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentToPostResponseDto'
    patch:
      operationId: AuthCommentToPostController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAuthCommentToPostDto'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentToPostResponseDto'
    delete:
      operationId: AuthCommentToPostController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentToPostResponseDto'
  /api/admin/comment/post/{id}:
    delete:
      operationId: AuthAdminCommentToPostController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: number
      responses:
        '200':
          description: ''
info:
  title: EkanProton Backend API
  description: The EkanProton Backend API description
  version: 0.0.1
  contact: {}
tags: []
servers: []
components:
  securitySchemes:
    SESSIONID:
      type: apiKey
      in: cookie
      name: SESSIONID
    role:
      type: apiKey
  schemas:
    LoginAuthRequestDto:
      type: object
      properties:
        screenName:
          type: string
        password:
          type: string
      required:
        - screenName
        - password
    LoginAuthResponseDto:
      type: object
      properties:
        id:
          type: number
      required:
        - id
    templateException:
      type: object
      properties:
        statusCode:
          type: number
        message:
          type: string
        error:
          type: string
      required:
        - statusCode
        - message
        - error
    CreateUserRequestDto:
      type: object
      properties:
        screenName:
          type: string
        userName:
          type: string
        password:
          type: string
      required:
        - screenName
        - password
    UserResponseDto:
      type: object
      properties:
        id:
          type: number
        screenName:
          type: string
        userName:
          type: string
        createdAt:
          format: date-time
          type: string
        lastLoginDate:
          format: date-time
          type: string
        comment:
          type: string
      required:
        - id
        - screenName
        - userName
        - createdAt
        - lastLoginDate
        - comment
    UserAuthResponseDto:
      type: object
      properties:
        id:
          type: number
        screenName:
          type: string
        userName:
          type: string
        createdAt:
          format: date-time
          type: string
        lastLoginDate:
          format: date-time
          type: string
        lastUpdateDate:
          format: date-time
          type: string
        comment:
          type: string
        privateComment:
          type: string
        role:
          type: object
      required:
        - id
        - screenName
        - userName
        - createdAt
        - lastLoginDate
        - lastUpdateDate
        - comment
        - privateComment
        - role
    PasswordUserAuthRequestDto:
      type: object
      properties:
        currentpassword:
          type: string
        newpassword:
          type: string
      required:
        - currentpassword
        - newpassword
    UpdateUserRequestDto:
      type: object
      properties:
        screenName:
          type: string
        userName:
          type: string
        comment:
          type: string
        privateComment:
          type: string
    DeleteUserRequestDto:
      type: object
      properties:
        password:
          type: string
      required:
        - password
    UpdateUserAdminRequestDto:
      type: object
      properties:
        screenName:
          type: string
        password:
          type: string
        comment:
          type: string
        privateComment:
          type: string
        role:
          type: object
      required:
        - password
    PostResponseDto:
      type: object
      properties:
        id:
          type: number
        title:
          type: string
        body:
          type: string
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
        screenName:
          type: string
        userName:
          type: string
        likedNum:
          type: number
        commentedNum:
          type: number
      required:
        - id
        - title
        - body
        - createdAt
        - updatedAt
        - screenName
        - userName
        - likedNum
        - commentedNum
    CreateAuthPostDto:
      type: object
      properties:
        title:
          type: string
        body:
          type: string
      required:
        - title
    UpdateAuthPostDto:
      type: object
      properties:
        title:
          type: string
          example: "PIYUPIYU1"
        body:
          type: string
          example: "PIYUPIYU2"
      required:
        - title
    LikeToPostResponseDto:
      type: object
      properties:
        userName:
          type: string
        screenName:
          type: string
        postTitle:
          type: string
      required:
        - userName
        - screenName
        - postTitle
    CommentToPostResponseDto:
      type: object
      properties:
        id:
          type: number
        userName:
          type: string
        screenName:
          type: string
        postTitle:
          type: string
        text:
          type: string
      required:
        - id
        - userName
        - screenName
        - postTitle
        - text
    CreateAuthCommentToPostDto:
      type: object
      properties:
        text:
          type: string
      required:
        - text
    UpdateAuthCommentToPostDto:
      type: object
      properties:
        text:
          type: string
